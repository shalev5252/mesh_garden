@startuml MeshGarden Classes

abstract Device{
    - bool enabled
    - int ID 
    + String DEVICE_TYPE 
    + String HARDWARE_INFO
    - uint8_t data_pins
    + uint8_t POWER_PIN


    # void Device(int id, String device_type, String hardware_info, uint8_t data_pins, uint8_t power_pin)
    + void enable(bool _power_on)
    + void disable()
    + void power_on()
    + void power_off()
}

abstract Sensor{
    + String UNITS
    # float[] values

    + void measure()
    + float[] get_vlaues()
}

entity Measurement{
    + bool last
    + String type
    + float value
}

annotation measure_callback_t <<typedef std::function<void()> >> {
    hide fields
}

    ' hide members
abstract Actuator{}

class SoilMoistureSensor{}

class AirHumidityTemperatureSensor{}

class UVSensor{}

class LightSensor{}

class HoseActuator{}

class Network{
    add_task()
    remove_task()
}

class MeshGarden{
    - set<Device> Devices
    
    init_network()
    init_devices()
    check_firmware_update()
    update_firmware()
    sync_with_server()
}

class OTA{}

class main{
    void setup()
    void loop()
}
hide main circle
hide main fields


Device <|-- Sensor
Device <|-- Actuator
Sensor <|-- SoilMoistureSensor
Sensor <|-- AirHumidityTemperatureSensor
Sensor <|-- UVSensor
Sensor <|-- LightSensor
Actuator <|-- HoseActuator

main o-- MeshGarden
MeshGarden o-- OTA
MeshGarden o-- Network
MeshGarden o-- Device



skinparam legendBackgroundColor #ffffff
legend

|= field |= method |=  |
|  <img:https://s.plantuml.com/private-field.png>     |   <img:https://s.plantuml.com/private-method.png>     | private |
|  <img:https://s.plantuml.com/protected-field.png>   |   <img:https://s.plantuml.com/protected-method.png>   | protected |
|  <img:https://s.plantuml.com/package-private-field.png>     |   <img:https://s.plantuml.com/package-private-method.png>    | package private |
|  <img:https://s.plantuml.com/public-field.png>     |   <img:https://s.plantuml.com/public-method.png>     | public |

endlegend

@enduml

