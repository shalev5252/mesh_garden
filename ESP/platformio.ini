; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = d1_mini

[env]
framework = arduino
;needed for to not ignore macos such as '#define' during dependencies analyzing
lib_ldf_mode = chain+
monitor_speed = 115200
;use to ignore files and folders when doing build
build_src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<test/> -<tests/> -<MeshGardenApp/>
board_build.filesystem = littlefs
lib_deps = 
	painlessmesh/painlessMesh@^1.5.0
	bblanchon/ArduinoJson @ ^6.19.4
	adafruit/DHT sensor library@^1.4.3
	adafruit/Adafruit ADS1X15@^2.4.0
	sparkfun/SparkFun VEML6075 Arduino Library@^1.1.5


[env:d1_mini]
platform = espressif8266
board = d1_mini
build_src_filter = ${env.src_filter} -<mesh_bridge.cpp> -<mesh_bridge.h>
lib_deps = 
    ${env.lib_deps}


[env:esp32]
platform = espressif32
board = esp32doit-devkit-v1
build_src_filter = ${env.src_filter} -<mesh_node.cpp> 
lib_deps = 
    ${env.lib_deps}
	mobizt/Firebase Arduino Client Library for ESP8266 and ESP32 @ ^4.0.3
	me-no-dev/ESP Async WebServer @ 1.2.3
    fbiego/ESP32Time@^1.1.0
extra_scripts = replace_fs.py


[env:d1_mini_debug]
platform = espressif8266
board = d1_mini
build_src_filter = ${env.src_filter} -<mesh_bridge.cpp> -<mesh_bridge.h>
monitor_filters = esp8266_exception_decoder, default
build_type = debug


[env:esp32_debug]
platform = espressif32
board = esp32doit-devkit-v1
build_src_filter = ${env.src_filter} -<mesh_node.cpp> 
lib_deps = 
    ${env.lib_deps}
	me-no-dev/ESP Async WebServer @ 1.2.3
    fbiego/ESP32Time@^1.1.0
extra_scripts = replace_fs.py
; debug_tool = olimex-arm-usb-ocd-h
monitor_filters = esp32_exception_decoder, default
build_type = debug